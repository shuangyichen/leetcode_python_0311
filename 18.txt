# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def deleteNode(self, head: ListNode, val: int) -> ListNode:
        dummy = ListNode(0)
        dummy.next = head
        if head.val==val:
            return head.next
        while head and head.next:
            if head.next.val==val:
                head.next=head.next.next
            else:
                head=head.next
        return dummy.next
        
#双指针 自己写的
class Solution:
    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:
        ceng = 0
        dummy = ListNode(0)
        dummy.next = head
        p1 = 0
        if k==1:
            while head and head.next:
                head=head.next
            return head
        while head:
            p1+=1
            head = head.next
            while p1>=k-1:
                dummy = dummy.next
                while head and head.next:
                    p1+=1
                    head = head.next
                    dummy = dummy.next
                return dummy
#双指针简洁版
class Solution:
    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:
        fast = slow = head
        while k>0:
            fast = fast.next
            k-=1
        while fast != None:
            fast = fast.next
            slow = slow.next
        return slow