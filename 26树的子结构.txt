class Solution:
    def isSubStructure(self, A: TreeNode, B: TreeNode) -> bool:
        if A==None or B==None:
            return False
        
        if A.val!=B.val:
            left = self.isSubStructure(A.left,B)
            right = self.isSubStructure(A.right,B)
            return (left or right)
        elif A.val == B.val:
            left = self.compare(A.left,B.left)
            right = self.compare(A.right,B.right)
            if (left and right) ==False:
                l = self.isSubStructure(A.left,B)
                r = self.isSubStructure(A.right,B)
                return (l or r)
            elif (left and right) == True:
                return True
    
    def compare(self,A,B):
        if B==None:
            return True
        elif A==None:
            return False

        if A.val!=B.val:
            return False
        else:
            left = self.compare(A.left,B.left)
            right = self.compare(A.right,B.right)
            return (left and right)