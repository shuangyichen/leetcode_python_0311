#递归
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        if l1==None:
            return l2
        elif l2==None:
            return l1
        if l1.val<=l2.val:
            l1.next = self.mergeTwoLists(l1.next,l2)
            return l1
        elif l1.val>l2.val:
            l2.next = self.mergeTwoLists(l1,l2.next)
            return l2

#迭代
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        L = ListNode(None)
        pre = L
        while l1 and l2:
            if l1.val<=l2.val:
                L.next = l1
                L = L.next
                l1 = l1.next
            elif l1.val>l2.val:
                L.next = l2
                L = L.next
                l2 = l2.next

        if l1!=None:
            L.next = l1
        elif l2!=None:
            L.next = l2
        return pre.next